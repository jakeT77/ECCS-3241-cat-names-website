/* /static/styes.css */

/* Global Ddeclarations */
:root {
    --text: #000;
    --primary-background: #fff;
    --blue: #0288D1;
    --red: #f11a4f;
}

/* main style */
body {
    font-family: 'Courier New', Courier, monospace;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    padding: 20px;
    background-color: var(--primary-background);
    color: var(--text);
    background-color: rgba(144, 137, 140, .2);
}


svg {
    fill: var(--text);
}

#card {
    display: flex;
    flex-direction: column;
}

/* image drop */
.drop-area {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 300px;
    height: 200px;
    border: 2px dashed #ccc;
    border-radius: 5px;
    text-align: center;
}

.drop-area p {
    width: 200px;
    color: #666;
}

#preview img {
    max-width: 100%;
    max-height: 150px;
    object-fit: contain;
    margin: 20px auto;
}

/* radio group */
.row {
    padding: 10px;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

.m {
    color: var(--blue);
}

.f {
    color: var(--red);
}

#selection {
    -webkit-transition: all 0.3s cubic-bezier(1, 0.1, 0, 0.9);
    transition: all 0.3s cubic-bezier(1, 0.1, 0, 0.9);
}

input[type="radio"] {
    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
    height: 1px;
    width: 1px;
    margin: -1px;
    padding: 0;
}

input[type="radio"]+label {
    position: relative;
    display: inline-block;
    overflow: hidden;
    text-indent: -9999px;
    background: #ccc;
    width: 30px;
    height: 30px;
    border-radius: 100%;
    cursor: pointer;
    -webkit-transition: all 0.3s cubic-bezier(1, 0.1, 0, 0.9);
    transition: all 0.3s cubic-bezier(1, 0.1, 0, 0.9);
}

input[type="radio"]+label:before {
    content: '';
    position: absolute;
    display: block;
    height: 10px;
    width: 10px;
    top: 50%;
    left: 50%;
    background: white;
    border-radius: 100%;
    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.1);
    -webkit-transition: all 0.3s cubic-bezier(1, 0.1, 0, 0.9) 0.1s;
    transition: all 0.3s cubic-bezier(1, 0.1, 0, 0.9) 0.1s;
    -webkit-transform: translateZ(0) translate(-50%, -50%) scale(0);
    transform: translateZ(0) translate(-50%, -50%) scale(0);
}

input[type="radio"]:checked+label {
    background: var(--blue);
}

#radio-f:checked+label {
    background: var(--red);
}

input[type="radio"]:checked+label:before {
    -webkit-transform: translateZ(0) translate(-50%, -50%) scale(1);
    transform: translateZ(0) translate(-50%, -50%) scale(1);
}

/* button */

.button {
    margin-top: 10px;
    color: #ccc;
    --offset: 10px;
    --border-size: 2px;
    display: block;
    position: relative;
    padding: 1.5em 3em;
    appearance: none;
    border: 0;
    background: transparent;
    text-transform: uppercase;
    letter-spacing: 0.25em;
    outline: none;
    cursor: pointer;
    font-weight: bold;
    border-radius: 0;
    box-shadow: inset 0 0 0 var(--border-size) currentcolor;
    transition: background 0.8s ease;
}

.button span {
    color: var(--text);
}

.button:hover {
    background: #ccc;
}

.button__horizontal,
.button__vertical {
    position: absolute;
    top: var(--horizontal-offset, 0);
    right: var(--vertical-offset, 0);
    bottom: var(--horizontal-offset, 0);
    left: var(--vertical-offset, 0);
    transition: transform 0.8s ease;
    will-change: transform;
}

.button__horizontal::before,
.button__vertical::before {
    content: '';
    position: absolute;
    border: inherit;
}

.button__horizontal {
    --vertical-offset: calc(var(--offset) * -1);
    border-top: var(--border-size) dashed currentcolor;
    border-bottom: var(--border-size) dashed currentcolor;
}

.button__horizontal::before {
    top: calc(var(--vertical-offset) - var(--border-size));
    bottom: calc(var(--vertical-offset) - var(--border-size));
    left: calc(var(--vertical-offset) * -1);
    right: calc(var(--vertical-offset) * -1);
}

.button:hover .button__horizontal {
    transform: scaleX(0);
}

.button__vertical {
    --horizontal-offset: calc(var(--offset) * -1);
    border-left: var(--border-size) dashed currentcolor;
    border-right: var(--border-size) dashed currentcolor;
}

.button__vertical::before {
    top: calc(var(--horizontal-offset) * -1);
    bottom: calc(var(--horizontal-offset) * -1);
    left: calc(var(--horizontal-offset) - var(--border-size));
    right: calc(var(--horizontal-offset) - var(--border-size));
}

.button:hover .button__vertical {
    transform: scaleY(0);
}

/* output */
#output {
    color: var(--text);
    appearance: none;
    text-transform: uppercase;
    letter-spacing: 0.25em;
    font-weight: bold;
    position: absolute;
    bottom: 25%;
    left: 50%;
    transform: translateX(-50%);
    width: 100%;
}

#overlay {
    height: 0;
    width: 100%;
    position: fixed;
    z-index: 1;
    top: 0;
    left: 0;
    background-color: #ccc;
    overflow-x: hidden;
    font-size: 0;
    transition: all 4s cubic-bezier(0.455, 0.03, 0.515, 0.955);
}